// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


// old way i would've wrote code
var first = 1
var second = 2
var sum = 0
var second_temp = 0

while (first < 4000000) {
    if (first % 2 == 0) sum += first
    second_temp = second
    second = first + second
    first = second_temp
}

println(sum)

// new more functional style of code

def fib(a: Int, b: Int): Stream[Int] = {
    a #:: fib(b, a + b)
}

val answer = fib(1,2).takeWhile(_ <= 4000000).filter(_ % 2 == 0).sum
println(answer)
